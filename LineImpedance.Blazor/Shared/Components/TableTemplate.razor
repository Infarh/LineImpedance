@typeparam TItem

@if (Items is { } items)
{
    if (RowTemplate is { } row)
    {
        <table @attributes=@TableAttributes>
            <thead>
                <tr>@TableHeader</tr>
            </thead>
            <tbody>
                @foreach (var item in items)
                {
                    <tr>@row(item)</tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <table @attributes=@TableAttributes>
            <thead>
                <tr>@TableHeader</tr>
            </thead>
            <tbody>
                @foreach (var item in items)
                {
                    <tr>item</tr>
                }
            </tbody>
        </table>
    }
}

@code {
    [Parameter]
    public Dictionary<string, object> TableAttributes { get; set; } = 
        new(StringComparer.OrdinalIgnoreCase)
        {
            { "class", "table" }
        };

    [Parameter]
    public RenderFragment? TableHeader { get; set; }

    [Parameter]
    public RenderFragment<TItem>? RowTemplate { get; set; }

    [Parameter]
    public IEnumerable<TItem>? Items { get; set; }
}